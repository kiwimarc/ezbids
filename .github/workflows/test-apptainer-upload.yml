name: Test Apptainer upload

on:
  push:
    branches:
      - openneuropet_apptainer

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Project environment preparation (mimic dev_apptainer.sh)
        run: |
          set -ex
          cd ..
          # check to see if a .env file exists
          if [ -f apptainer/.env ]; then
              echo ".env file exists, loading environment variables from .env file"
          else
              echo ".env file does not exist, copying example.env to .env"
              cp example.env apptainer/.env
          fi

          # Ensure SERVER_NAME=localhost exists in .env
          if ! grep -q "^SERVER_NAME=" apptainer/.env; then
               echo "SERVER_NAME=localhost" >> apptainer/.env
               echo "Added SERVER_NAME=localhost to .env"
          fi

          echo "MONGO_CONNECTION_STRING=mongodb://localhost:27017/ezbids" >> ./apptainer/.env

          # check if required dir exists
          required_dirs=("tmp" "tmp/data" "tmp/ezbids-workdir" "tmp/upload" "tmp/workdir")
          for dir in "${required_dirs[@]}"; do
              if [ ! -d "$dir" ]; then
                  echo "Creating: $dir"
                  mkdir -p "$dir"
              fi
          done

          # Install dependencies for api and ui
          npm install npm@9.5.1 pm2 typescript tsc-watch
          (cd api && npm install)
          (cd ui && npm install)

          # Generate keys (assuming this is a necessary setup step)
          ./generate_keys.sh

          (cd ui && chmod +x ./entrypoint.sh && ls -l)

        shell: bash
        working-directory: ./apptainer

      - name: Install Apptainer from PPA
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:apptainer/ppa
          sudo apt update
          sudo apt install -y apptainer

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build container images
        run: |
          set -e
          bash build.sh

      - name: Export Docker images
        run: |
          set -e
          docker save -o api_image.tar ezbids-api
          docker save -o handler_image.tar ezbids-handler
          docker save -o ui_image.tar ezbids-ui
          # docker save -o telemetry_image.tar ezbids-telemetry
        working-directory: ./apptainer
        
      - name: Free up disk space
        run: |
          sudo docker system prune -af || true
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost /usr/local/.ghcup || true
          sudo apt-get clean
          df -h
          
      - name: Convert Docker images to SIF
        run: |
          set -e
          apptainer build api.sif docker-archive:api_image.tar
          apptainer build handler.sif docker-archive:handler_image.tar
          apptainer build ui.sif docker-archive:ui_image.tar
          # apptainer build telemetry.sif docker-archive:telemetry_image.tar
        working-directory: ./apptainer

      - name: Set up environment
        run: |
          set -a
          source ./apptainer/.env
          echo "EZBIDS_DIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "---- Loaded Environment Variables ----"
          env | sort
          echo "-------------------------------------"
          set +a

      - name: Start MongoDB in Apptainer
        run: |
          set -e
          # Build if missing
          if [ ! -e "mongodb.sif" ]; then
            apptainer build mongodb.sif docker://mongo:4.4.15
          fi
          # Start MongoDB in background
          apptainer exec --bind $EZBIDS_DIR:$EZBIDS_DIR --bind $EZBIDS_DIR/tmp:/tmp --bind $EZBIDS_DIR/tmp/data:/data mongodb.sif bash -c "mongod --dbpath /data/ --nounixsocket" > mongo.log 2>&1 &
          # Wait for MongoDB to be ready
          for i in {1..20}; do
            if apptainer exec mongodb.sif bash -c "echo 'db.runCommand(\"ping\").ok' | mongo localhost:27017/test --quiet" | grep -q 1; then
              echo "MongoDB is ready."
              exit 0
            fi
            echo "MongoDB not ready, retrying in 5s..."
            sleep 5
          done
          echo "MongoDB failed health check."
          exit 1
        working-directory: ./apptainer

      - name: Start API in Apptainer
        run: |
          set -e
          apptainer exec --env "MONGO_CONNECTION_STRING=mongodb://localhost:27017/ezbids" --env "PM2_HOME=$HOME/.api" --bind $EZBIDS_DIR:$EZBIDS_DIR --bind $EZBIDS_DIR/tmp:/tmp  api.sif ./start_api.sh > api.log 2>&1 &
          for i in {1..100}; do
            if curl -fs http://localhost:8082/health; then
              echo "API is ready."
              exit 0
            fi
            echo "API not ready, retrying in 5s..."
            echo "Output of curl -fs http://localhost:8082/health:"
            curl -v http://localhost:8082/health || true
            echo "---- API log (last 40 lines) ----"
            tail -n 40 api.log || true
            echo "---------------------------------"
            echo "---- DB log (last 40 lines) ----"
            tail -n 40 mongo.log || true
            echo "---------------------------------"
            sleep 5
          done
          echo "API failed health check."
          echo "Final API log (last 100 lines):"
          tail -n 100 api.log || true
          exit 1
        working-directory: ./apptainer

      - name: Start Handler in Apptainer
        run: |
          set -e
          apptainer exec --env "MONGO_CONNECTION_STRING=mongodb://localhost:27017/ezbids" --env "PM2_HOME=$HOME/.handler" --bind $EZBIDS_DIR:$EZBIDS_DIR --bind $EZBIDS_DIR/tmp:/tmp  handler.sif ./start_handler.sh > handler.log 2>&1 &
          sleep 10
          echo "Handler log (last 40 lines):"
          tail -n 40 handler.log || true
        working-directory: ./apptainer

      - name: Debug UI container
        run: |
          apptainer exec --bind $EZBIDS_DIR:$EZBIDS_DIR ui.sif node -v
          apptainer exec --bind $EZBIDS_DIR:$EZBIDS_DIR ui.sif uname -a
          apptainer exec --bind $EZBIDS_DIR:$EZBIDS_DIR ui.sif npm list esbuild
          apptainer exec --bind $EZBIDS_DIR:$EZBIDS_DIR ui.sif node -p "require('esbuild').version"
        working-directory: ./apptainer

      - name: Start UI in Apptainer
        run: |
          set -e
          apptainer exec --env "VITE_APIHOST=http://$SERVER_NAME:8082" --bind $EZBIDS_DIR:$EZBIDS_DIR ui.sif bash -c "./start_ui.sh > ui.log 2>&1 &"
          for i in {1..100}; do
            if curl -fs http://localhost:3000 >/dev/null; then
              echo "UI is ready."
              exit 0
            fi
            echo "UI not ready, retrying in 5s..."
            echo "---- UI log (last 40 lines) ----"
            tail -n 40 ui.log || true
            echo "--------------------------------"
            sleep 5
          done
          echo "UI failed health check."
          echo "Final UI log (last 100 lines):"
          tail -n 100 ui.log || true
          exit 1
        working-directory: ./apptainer

      - name: Run upload test
        run: make test-upload
